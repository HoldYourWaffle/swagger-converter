{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Swagger Sample App",
        "description": "This is a sample server Petstore server.  You can find out more about Swagger \n    at <a href=\"http://swagger.wordnik.com\">http://swagger.wordnik.com</a> or on irc.freenode.net, #swagger.  For this sample,\n    you can use the api key \"special-key\" to test the authorization filters",
        "contact": {
            "email": "apiteam@wordnik.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "termsOfService": "http://helloreverb.com/terms/"
    },
    "paths": {
        "/pet": {
            "put": {
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Pet not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "description": "",
                "summary": "Update an existing pet",
                "operationId": "updatePet",
                "produces": [
                    "application/json",
                    "application/xml",
                    "text/plain",
                    "text/html"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "description": "Pet object that needs to be updated in the store",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Pet"
                        }
                    }
                ]
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Pet not found"
                    }
                },
                "description": "",
                "summary": "Find pet by ID",
                "operationId": "getPetById",
                "produces": [
                    "application/json",
                    "application/xml",
                    "text/plain",
                    "text/html"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of pet that needs to be fetched",
                        "name": "petId",
                        "required": true,
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "responses": {},
                "description": "",
                "summary": "uploads an image",
                "operationId": "uploadFile",
                "produces": [
                    "application/json",
                    "application/xml",
                    "text/plain",
                    "text/html"
                ],
                "parameters": [
                    {
                        "in": "form",
                        "description": "Additional data to pass to server",
                        "name": "additionalMetadata",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "form",
                        "description": "file to upload",
                        "name": "file",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/File"
                        }
                    }
                ]
            },
            "delete": {
                "responses": {
                    "400": {
                        "description": "Invalid pet value"
                    }
                },
                "description": "",
                "summary": "Deletes a pet",
                "operationId": "deletePet",
                "produces": [
                    "application/json",
                    "application/xml",
                    "text/plain",
                    "text/html"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "Pet id to delete",
                        "name": "petId",
                        "required": true,
                        "type": "string"
                    }
                ]
            },
            "patch": {
                "responses": {
                    "400": {
                        "description": "Invalid tag value"
                    }
                },
                "description": "",
                "summary": "partial updates to a pet",
                "operationId": "partialUpdate",
                "produces": [
                    "application/json",
                    "application/xml",
                    "text/plain",
                    "text/html"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of pet that needs to be fetched",
                        "name": "petId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "description": "Pet object that needs to be added to the store",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Pet"
                        }
                    }
                ]
            }
        },
        "/user": {
            "post": {
                "responses": {},
                "description": "",
                "summary": "Create user",
                "operationId": "createUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "description": "Created user object",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ]
            },
            "put": {
                "responses": {
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "description": "",
                "summary": "Updated user",
                "operationId": "updateUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "name that need to be deleted",
                        "name": "username",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "description": "Updated user object",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ]
            },
            "delete": {
                "responses": {
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "description": "",
                "summary": "Delete user",
                "operationId": "deleteUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "The name that needs to be deleted",
                        "name": "username",
                        "required": true,
                        "type": "string"
                    }
                ]
            },
            "get": {
                "responses": {},
                "description": "",
                "summary": "Logs out current logged in user session",
                "operationId": "logoutUser",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/store": {
            "post": {
                "responses": {
                    "400": {
                        "description": "Invalid order"
                    }
                },
                "description": "",
                "summary": "Place an order for a pet",
                "operationId": "placeOrder",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "description": "order placed for purchasing the pet",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    }
                ]
            },
            "delete": {
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                },
                "description": "",
                "summary": "Delete purchase order by ID",
                "operationId": "deleteOrder",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of the order that needs to be deleted",
                        "name": "orderId",
                        "required": true,
                        "type": "string"
                    }
                ]
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                },
                "description": "",
                "summary": "Find purchase order by ID",
                "operationId": "getOrderById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of pet that needs to be fetched",
                        "name": "orderId",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        }
    },
    "definitions": {
        "Tag": {
            "id": "Tag",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Pet": {
            "id": "Pet",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "unique identifier for the pet",
                    "minimum": "0.0",
                    "maximum": "100.0"
                },
                "category": {
                    "$ref": "Category"
                },
                "name": {
                    "type": "string"
                },
                "photoUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "Tag"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "pet status in the store",
                    "enum": [
                        "available",
                        "pending",
                        "sold"
                    ]
                }
            }
        },
        "Category": {
            "id": "Category",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "User": {
            "id": "User",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "firstName": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "userStatus": {
                    "type": "integer",
                    "format": "int32",
                    "description": "User Status",
                    "enum": [
                        "1-registered",
                        "2-active",
                        "3-closed"
                    ]
                }
            }
        },
        "Order": {
            "id": "Order",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "petId": {
                    "type": "integer",
                    "format": "int64"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string",
                    "description": "Order Status",
                    "enum": [
                        "placed",
                        " approved",
                        " delivered"
                    ]
                },
                "shipDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        }
    }
}